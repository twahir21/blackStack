"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var index_exports = {};
__export(index_exports, {
  bearer: () => bearer,
  default: () => index_default
});
module.exports = __toCommonJS(index_exports);
var import_elysia = require("elysia");
var bearer = ({
  extract: {
    body = "access_token",
    query: queryName = "access_token",
    header = "Bearer"
  } = {
    body: "access_token",
    query: "access_token",
    header: "Bearer"
  }
} = {
  extract: {
    body: "access_token",
    query: "access_token",
    header: "Bearer"
  }
}) => new import_elysia.Elysia({
  name: "@elysiajs/bearer",
  seed: {
    body,
    query: queryName,
    header
  }
}).derive(
  { as: "global" },
  function deriveBearer({ query, headers: { authorization } }) {
    return {
      get bearer() {
        if (authorization?.startsWith(header))
          return authorization.slice(
            header.length + 1
          );
        const q = query[queryName];
        if (Array.isArray(q)) return q[0];
        if (q) return q;
      }
    };
  }
);
var index_default = bearer;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  bearer
});
