import { Elysia } from 'elysia';
import { Cron, type CronOptions } from 'croner';
export interface CronConfig<Name extends string = string> extends CronOptions {
    /**
     * Input pattern, input date, or input ISO 8601 time string
     *
     * ---
     * ```plain
     * ┌────────────── second (optional)
     * │ ┌──────────── minute
     * │ │ ┌────────── hour
     * │ │ │ ┌──────── day of month
     * │ │ │ │ ┌────── month
     * │ │ │ │ │ ┌──── day of week
     * │ │ │ │ │ │
     * * * * * * *
     * ```
     */
    pattern: string;
    /**
     * Cronjob name to registered to `store`
     */
    name: Name;
    /**
     * Function to execute on time
     */
    run: (store: Cron) => any | Promise<any>;
}
export declare const cron: <Name extends string = string>({ pattern, name, run, ...options }: CronConfig<Name>) => (app: Elysia) => Elysia<"", {
    decorator: {};
    store: {
        cron: Record<Name, Cron>;
    };
    derive: {};
    resolve: {};
}, {
    typebox: {};
    error: {};
}, {
    schema: {};
    standaloneSchema: {};
    macro: {};
    macroFn: {};
    parser: {};
}, {}, {
    derive: {};
    resolve: {};
    schema: {};
    standaloneSchema: {};
}, {
    derive: {};
    resolve: {};
    schema: {};
    standaloneSchema: {};
}>;
export { Patterns } from './schedule';
export default cron;
